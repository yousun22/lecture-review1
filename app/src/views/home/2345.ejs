<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>센서 수위 정보</title>
    <link rel="stylesheet" href="/css/home/toggle.css">
    <script>
      window.addEventListener('load', function () {
          // 서버로부터 오는 이벤트를 위한 EventSource 객체를 생성합니다.
          const eventSource = new EventSource('/events');

          eventSource.onmessage = function(e) {
              // 서버로부터 메시지 이벤트가 오면 이를 처리합니다.
              const data = JSON.parse(e.data);
              // 데이터를 웹 페이지에 표시합니다.
              document.getElementById('data').innerText = data;
          };

          eventSource.onerror = function(e) {
              // 에러 발생 시 처리
              console.error('EventSource failed:', e);
              eventSource.close();
          };

          // 페이지를 벗어나거나 닫을 때 EventSource 연결을 닫습니다.
          window.onbeforeunload = function() {
              eventSource.close();
          };

          setupToggleSwitchListener();
          fetchInitialToggleState();
      });

      function fetchInitialToggleState() {
          fetch('/toggle_state')
              .then(response => response.json())
              .then(data => {
                  const toggleSwitch = document.getElementById('toggle-switch');
                  toggleSwitch.checked = data.toggleState;
                  updateToggleDisplay(data.toggleState);
              })
              .catch(error => console.error('Error fetching initial toggle state:', error));
      }

      function setupToggleSwitchListener() {
          var toggleSwitch = document.getElementById('toggle-switch');
          var countdownTimer = document.getElementById('countdown');
          var toggleContainer = toggleSwitch.closest('.switch');

          toggleSwitch.addEventListener('change', function() {
              sendToggleStateToServer(this.checked, () => {
                  toggleSwitch.disabled = true;
                  countdownTimer.style.display = 'inline';
                  startCountdown(20, this.checked);
              });
          });
      }

      function startCountdown(duration, initialState) {
          var timer = duration, minutes, seconds;
          var countdownInterval = setInterval(() => {
              minutes = parseInt(timer / 60, 10);
              seconds = parseInt(timer % 60, 10);
              minutes = minutes < 10 ? "0" + minutes : minutes;
              seconds = seconds < 10 ? "0" + seconds : seconds;

              countdownTimer.textContent = minutes + ":" + seconds;

              if (--timer < 0) {
                  clearInterval(countdownInterval);
                  toggleSwitch.disabled = false;
                  countdownTimer.style.display = 'none';
                  synchronizeToggleState();
              } else if (timer % 5 === 0) { // Check database state every 5 seconds
                  synchronizeToggleState();
              }
          }, 1000);
      }

      function synchronizeToggleState() {
          fetch('/toggle_state')
              .then(response => response.json())
              .then(data => {
                  const toggleSwitch = document.getElementById('toggle-switch');
                  if (toggleSwitch.checked !== data.toggleState) {
                      toggleSwitch.checked = data.toggleState;
                      updateToggleDisplay(data.toggleState);
                  }
              })
              .catch(error => console.error('Error synchronizing toggle state:', error));
      }

      function updateToggleDisplay(state) {
          const displayElement = document.getElementById('toggleDisplay');
          displayElement.textContent = state ? "ON" : "OFF";
      }

      function sendToggleStateToServer(state, callback) {
          var xhr = new XMLHttpRequest();
          xhr.open('POST', '/update_toggle_state', true);
          xhr.setRequestHeader('Content-Type', 'application/json');

          xhr.onload = function() {
              if (xhr.status === 200) {
                  console.log('Toggle state updated successfully');
              } else {
                  console.error('Error updating toggle state');
              }
              callback(); // Execute callback after server response
          };

          xhr.onerror = function() {
              console.error('Network error');
              callback(); // Execute callback on network error
          };

          xhr.send(JSON.stringify({toggleState: state}));
      }
    </script>
  </head>
  <body>

    <div class="card-container">
        <div class="card">
            <div class="card-header">
                <a href="#" class="triangle-btn"></a> <!-- 삼각형 모양의 버튼 추가 -->
                <span class="bold-text">KGJ33391869</span>  |  매우먼논  |  아람1
            </div>
            <h2 class="sensor-title">
              <div class="water-level-icon">
                <div class="water"></div>
              </div>
              <span id="data">0.0</span>cm | 5.0cm
              <!-- <span class="measurement">5.2cm | 5.0cm</span> -->
              <div id="data-container"></div>
            </h2>
            <div class="mode-selection">
                <span class="operation-mode">모드:</span>
                <select name="mode" id="mode">
                  <option value="manual">수동</option>
                  <option value="auto">자동</option>
                  <option value="scheduler">스케줄러</option>
                </select>
                <label class="switch">
                    <input type="checkbox" id="toggle-switch">
                    <span class="slider round">
                      <span class="on">물꼬 열림</span> <!-- 여기에 열림 텍스트 추가 -->
                      <span class="off">물꼬 닫힘</span> <!-- 여기에 닫힘 텍스트 추가 -->
                    </span>
                  <span id="countdown" style="display: none;">00:20</span>
                  <div id="toggleDisplay" style="position: absolute; top: 20px; left: 20px;">
                    <!-- Toggle state will be displayed here -->
                  </div>
                </label>
                

            </div>
            <div class="card-end">
                <span class="additional-info"> 6월 10일 이앙   |    아람    |    예상 출수기(8월 19일) + 3day </span> 
            </div>

        </div>
        

    
    </body>
    </html>